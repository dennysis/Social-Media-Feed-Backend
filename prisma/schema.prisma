
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]

}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  posts     Post[]
  likes     Like[]
  followers Follow[] @relation("followers")
  following Follow[] @relation("following")
  createdAt DateTime @default(now())
  comments  Comment[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  likes     Like[]
  createdAt DateTime @default(now())
  comments  Comment[]
}

model Like {
  id      Int  @id @default(autoincrement())
  post    Post @relation(fields: [postId], references: [id])
  postId  Int
  user    User @relation(fields: [userId], references: [id])
  userId  Int
  createdAt DateTime @default(now())
}

model Follow {
  id          Int      @id @default(autoincrement())
  follower    User     @relation("following", fields: [followerId], references: [id])
  followerId  Int
  following   User     @relation("followers", fields: [followingId], references: [id])
  followingId Int
  createdAt   DateTime @default(now())
  
  @@unique([followerId, followingId])
}
model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}


